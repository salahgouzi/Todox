{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SALAH\\\\CODE\\\\react\\\\react_app\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"cad15e9b\";\nconst api_url = `http://www.omdbapi.com/?apikey=${api_key}`;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Hello From App \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\n\nlet displayMovies = async function (props) {\n  movName = props.movName;\n  let response = await fetch(api_url + \"&s=\" + movName);\n  let data = await response.json();\n\n  if (data.Response) {\n    let ex = data.Search[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"movie name : \", ex.Title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ex.Poster\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"no Movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nexport default {\n  App,\n  displayMovies\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["api_key","api_url","App","displayMovies","props","movName","response","fetch","data","json","Response","ex","Search","Title","Poster"],"sources":["C:/Users/SALAH/CODE/react/react_app/src/App.js"],"sourcesContent":["const api_key = \"cad15e9b\";\nconst api_url = `http://www.omdbapi.com/?apikey=${api_key}`;\n\nfunction App() {\n  return <h2>Hello From App {}</h2>;\n}\nlet displayMovies = async function (props) {\n  movName = props.movName;\n  let response = await fetch(api_url + \"&s=\" + movName);\n  let data = await response.json();\n  if (data.Response) {\n    let ex = data.Search[0];\n    return (\n      <div>\n        <p>movie name : {ex.Title}</p>\n        <img src={ex.Poster} />\n      </div>\n    );\n  } else {\n    return <h4>no Movies found</h4>;\n  }\n};\n\nexport default { App, displayMovies };\n\n"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,UAAhB;AACA,MAAMC,OAAO,GAAI,kCAAiCD,OAAQ,EAA1D;;AAEA,SAASE,GAAT,GAAe;EACb,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAFQA,G;;AAGT,IAAIC,aAAa,GAAG,gBAAgBC,KAAhB,EAAuB;EACzCC,OAAO,GAAGD,KAAK,CAACC,OAAhB;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACN,OAAO,GAAG,KAAV,GAAkBI,OAAnB,CAA1B;EACA,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;;EACA,IAAID,IAAI,CAACE,QAAT,EAAmB;IACjB,IAAIC,EAAE,GAAGH,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAT;IACA,oBACE;MAAA,wBACE;QAAA,4BAAiBD,EAAE,CAACE,KAApB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,GAAG,EAAEF,EAAE,CAACG;MAAb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CARD,MAQO;IACL,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACF,CAfD;;AAiBA,eAAe;EAAEZ,GAAF;EAAOC;AAAP,CAAf"},"metadata":{},"sourceType":"module"}