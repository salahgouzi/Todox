{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SALAH\\\\CODE\\\\react\\\\react_app\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"cad15e9b\";\nconst api_url = `http://www.omdbapi.com/?apikey=${api_key}`;\n\nfunction App() {\n  let displayMovies = async function (movName) {\n    let response = await fetch(api_url + \"&s=\" + movName);\n    let data = await response.json();\n\n    if (data.Response) {\n      let ex = data.Search[0];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"movie name : \", ex.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ex.Poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"no Movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  displayMovies(\"Batman\");\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Hello From App \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["api_key","api_url","App","displayMovies","movName","response","fetch","data","json","Response","ex","Search","Title","Poster"],"sources":["C:/Users/SALAH/CODE/react/react_app/src/App.js"],"sourcesContent":["const api_key = \"cad15e9b\";\nconst api_url = `http://www.omdbapi.com/?apikey=${api_key}`;\n\nfunction App() {\n  let displayMovies = async function (movName) {\n    let response = await fetch(api_url + \"&s=\" + movName);\n    let data = await response.json();\n    if (data.Response) {\n      let ex = data.Search[0];\n      return (\n        <div>\n          <p>movie name : {ex.Title}</p>\n          <img src={ex.Poster} />\n        </div>\n      );\n    } else {\n      return <h4>no Movies found</h4>;\n    }\n  };\n  displayMovies(\"Batman\");\n  return <h2>Hello From App {}</h2>;\n}\nexport default App;\n\n"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,UAAhB;AACA,MAAMC,OAAO,GAAI,kCAAiCD,OAAQ,EAA1D;;AAEA,SAASE,GAAT,GAAe;EACb,IAAIC,aAAa,GAAG,gBAAgBC,OAAhB,EAAyB;IAC3C,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,GAAG,KAAV,GAAkBG,OAAnB,CAA1B;IACA,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;;IACA,IAAID,IAAI,CAACE,QAAT,EAAmB;MACjB,IAAIC,EAAE,GAAGH,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAT;MACA,oBACE;QAAA,wBACE;UAAA,4BAAiBD,EAAE,CAACE,KAApB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,GAAG,EAAEF,EAAE,CAACG;QAAb;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAMD,CARD,MAQO;MACL,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;EACF,CAdD;;EAeAV,aAAa,CAAC,QAAD,CAAb;EACA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAlBQD,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}